{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","intialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","SearchOutlined","type","placeholder","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","InsertEmoticon","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","initialState","document","getElementById"],"mappings":"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","file":"static/js/main.75c6e8a0.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBLpK6tATuLwozq-omiTigW3ZwxwCWVWGI\",\r\n  authDomain: \"whatsapp-clone-921b4.firebaseapp.com\",\r\n  projectId: \"whatsapp-clone-921b4\",\r\n  storageBucket: \"whatsapp-clone-921b4.appspot.com\",\r\n  messagingSenderId: \"727565433448\",\r\n  appId: \"1:727565433448:web:1743204746a94d5d6719dd\",\r\n  measurementId: \"G-MM3VC41TS7\"\r\n};\r\n\r\nconst firebaseApp=firebase.initializeApp(firebaseConfig)\r\nconst db=firebaseApp.firestore()\r\nconst auth=firebase.auth()\r\nconst provider =  new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider }\r\nexport default db","import React,{ useState,useEffect } from 'react'\r\nimport { Avatar} from \"@material-ui/core\"\r\nimport './SidebarChat.css'\r\nimport db from './firebase'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction SidebarChat({id,name,addNewChat}) {\r\n    const [seed, setSeed]=useState('');\r\n    const [messages, setMessages] = useState('');\r\n\r\n    useEffect(() => {\r\n    if(id) {\r\n        db.collection('rooms').doc(id).collection('messages').orderBy('timestamp', 'desc').onSnapshot(\r\n        (snapshot) => setMessages(snapshot.docs.map(\r\n        (doc) => doc.data()\r\n        ))\r\n        )\r\n    }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*5000));\r\n        }, []);\r\n\r\n        const createChat = () => {\r\n        const roomName = prompt (\"Please Enter Name for Chat\")\r\n        if(roomName){\r\n          db.collection(\"rooms\").add({\r\n            name : roomName\r\n          })  \r\n        }\r\n        }\r\n\r\n    return  !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n        <div className=\"sidebarChat\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"sidebarChat__info\">\r\n        <h2>{name}</h2>\r\n        <p>{messages[0]?.message}</p>\r\n        </div>\r\n        </div>\r\n\r\n        </Link>\r\n        \r\n    ) : (\r\n        <div onClick={createChat} className=\"sidebarChat\" >\r\n        <h2> Add New Chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, {createContext, useContext, useReducer } from 'react'\r\n\r\nexport const StateContext  = createContext();\r\n\r\nexport const StateProvider = ( { reducer, intialState, children}) => ( \r\n\r\n<StateContext.Provider value={useReducer\r\n(reducer, intialState )}>\r\n{children}\r\n</StateContext.Provider>\r\n\r\n);\r\n\r\nexport const useStateValue = () => useContext \r\n(StateContext)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Sidebar.css'\r\nimport { Avatar,IconButton } from \"@material-ui/core\"\r\nimport { SearchOutlined } from \"@material-ui/icons\"\r\nimport ChatIcon from \"@material-ui/icons/Chat\"\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\"\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\"\r\nimport SidebarChat from './SidebarChat'\r\nimport db from './firebase'\r\nimport { useStateValue } from './StateProvider'\r\n\r\nfunction Sidebar() {\r\n\r\n    const [rooms, setRooms]=useState([]);\r\n    const[ {user}, dispatch ] = useStateValue();\r\n    useEffect(() => {\r\n      const unsubscribe =  db.collection(\"rooms\").onSnapshot((snapshot) => setRooms( \r\n\r\n        snapshot.docs.map( (doc) => ( {\r\n            id : doc.id,\r\n            data : doc.data(),\r\n        }))\r\n        ))\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n       \r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n   \r\n        <div className=\"sidebar__header\">\r\n        <Avatar src={user.photoURL} />\r\n        <div className=\"sidebar__headerRight\">\r\n        <IconButton>\r\n        <DonutLargeIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n        <ChatIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n        <MoreVertIcon />\r\n        </IconButton>\r\n    \r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"sidebar__search\">\r\n        <div className=\"sidebar_searchContainer\">\r\n        <SearchOutlined />\r\n        <input type=\"text\" placeholder=\"Search or Start New Chat\" />\r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"sidebar__chats\">\r\n        <SidebarChat addNewChat/>\r\n        {rooms.map((room) => (\r\n        <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n        ))}\r\n        </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useEffect,useState } from 'react'\r\nimport './Chat.css'\r\nimport { Avatar,IconButton } from \"@material-ui/core\"\r\nimport { AttachFile, InsertEmoticon, MoreVert, SearchOutlined } from '@material-ui/icons'\r\nimport MicIcon from \"@material-ui/icons/Mic\"\r\nimport { useParams } from 'react-router-dom'\r\nimport db from './firebase'\r\nimport { useStateValue } from './StateProvider'\r\nimport firebase from 'firebase'\r\n\r\nfunction Chat() {\r\n    const [seed, setSeed]=useState('');\r\n    const [input, setInput]=useState('');\r\n    const { roomId } =  useParams();\r\n    const [roomName, setRoomName] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [{user}, dispatch ] =  useStateValue();\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*5000));\r\n        }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        if(roomId) {\r\n            //alert(roomId)\r\n            db.collection('rooms').doc(roomId).onSnapshot( snapshot => {\r\n            setRoomName(snapshot.data().name)\r\n            })\r\n\r\n            db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp', 'asc').onSnapshot( snapshot => { \r\n            setMessages(snapshot.docs.map((doc) => doc.data() ))\r\n            })\r\n        }\r\n    },[roomId])\r\n\r\n       /* const createChat = () => {\r\n        const roomName = prompt (\"Please Enter Name for Chat\")\r\n        if(roomName){\r\n            \r\n        }\r\n        } */\r\n\r\n    const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"You typed >>> \", input)\r\n    db.collection('rooms').doc(roomId).collection('messages').add({\r\n    message : input,\r\n    name : user.displayName,\r\n    timestamp : firebase.firestore.FieldValue.serverTimestamp()\r\n    })\r\n    setInput('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n\r\n        <div className=\"chat__header\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"chat__headerInfo\">\r\n        <h3>{roomName}</h3>\r\n        <p>Last Seen {\" \"} { new Date(messages[messages.length-1]?.timestamp?.toDate()).toUTCString()} </p>\r\n        </div>\r\n        <div className=\"chat__headerRight\">\r\n        <IconButton>\r\n        <SearchOutlined />\r\n        </IconButton>\r\n        <IconButton>\r\n        <AttachFile />\r\n        </IconButton>\r\n        <IconButton>\r\n        <MoreVert />\r\n        </IconButton>\r\n        </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"chat__body\">\r\n        {messages.map((message) => (\r\n\r\n            <p className={`chat__message ${message.name === user.displayName && 'chat__receiver'}`}>\r\n            <span className=\"chat__name\">{message.name}</span>\r\n            {message.message}\r\n            <span className=\"chat__timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n            </p>\r\n        ))}\r\n        \r\n        </div>\r\n\r\n        <div className=\"chat__footer\">\r\n        <InsertEmoticon />\r\n        <form>\r\n        <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" />\r\n        <button onClick={sendMessage} type=\"submit\">Send Message</button>\r\n        </form>\r\n        <MicIcon />\r\n        </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","export const initialState = {\r\n    user :null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER : \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        case actionTypes.SET_USER:\r\n        return {\r\n        ...state,\r\n        user : action.user,\r\n        }\r\n\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react'\r\nimport './Login.css'\r\nimport { Button } from \"@material-ui/core\"\r\nimport { auth, provider } from \"./firebase\"\r\nimport { useStateValue } from './StateProvider'\r\nimport { actionTypes } from './reducer'\r\n\r\nfunction Login() {\r\n    const [user, dispatch ] =  useStateValue();\r\n\r\n    const signIn = () => {\r\n    auth.signInWithPopup(provider).then(\r\n    (result) => {\r\n        dispatch({\r\n            type : actionTypes.SET_USER,\r\n            user : result.user,\r\n        })\r\n\r\n    })\r\n    .catch((error) => alert(error.message));\r\n   }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/f/f7/WhatsApp_logo.svg\" alt=\"\" />\r\n            <div className=\"login__text\">\r\n            <h1>Sign in to whatsApp</h1>\r\n            </div>\r\n            <Button type=\"submit\" onClick={signIn}>\r\n            Sign In With Google\r\n            </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n const [ user, dispatch ] = useStateValue();\n  return (\n    <div className=\"app\">\n    {!user ? (\n    <Login />\n    ) : (\n      <div className=\"app__body\">\n      <Router>\n      <Sidebar/>\n     \n      <Switch>\n      <Route path=\"/rooms/:roomId\">\n      <Chat/>\n      </Route>\n      <Route path=\"/\">\n      <Chat/>\n      </Route>\n      </Switch>\n \n      </Router>\n      </div>\n\n    )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, { initialState } from \"./reducer\"\nimport { StateProvider } from \"./StateProvider\"\n\nReactDOM.render(\n  <React.StrictMode>\n  <StateProvider initialState={initialState} reducer={reducer} >\n    <App />\n  </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}